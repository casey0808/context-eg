{"version":3,"sources":["styles/NavBarStyles.js","contexts/ThemeContext.js","hooks/useToggleState.js","contexts/LanguageContext.js","Navbar.js","styles/FormStyles.js","Form.js","PageContent.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","width","marginBottom","grow","flexGrow","menuButton","marginLeft","marginRight","title","Object","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","height","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","ThemeContext","createContext","ThemeProvider","props","_useToggle","initialVal","arguments","length","undefined","_useState","useState","_useState2","slicedToArray","state","setstate","useToggle","_useToggle2","isDarkMode","toggleTheme","react_default","a","createElement","Provider","value","children","LanguageContext","LanguageProvider","language","setLanguage","changeLanguage","e","target","content","english","flag","darkMode","chinese","withStyles","classes","_useContext","useContext","_content$language","className","AppBar_default","Toolbar_default","IconButton_default","role","aria-label","Typography_default","variant","Switch_default","onChange","Search_default","InputBase_default","placeholder","input","main","paper","marginTop","flexDirection","padding","concat","avatar","margin","secondary","form","submit","words","signIn","email","password","remember","_words$language","Paper_default","Avatar_default","LockOutlined_default","Select_default","MenuItem_default","FormControl_default","required","fullWidth","InputLabel_default","htmlFor","Input_default","id","name","autoFocus","FormControlLabel_default","control","Checkbox_default","label","Button_default","type","PageContent","this","context","style","Component","contextType","App","PageContent_PageContent","src_Navbar","src_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d9f59a8.chunk.js","sourcesContent":["import { fade } from \"@material-ui/core/styles/colorManipulator\";\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginBottom: 0\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n});\n\nexport default styles;\n","import React, { createContext } from 'react';\r\nimport useToggle from '../hooks/useToggleState'; \r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport function ThemeProvider(props) {\r\n\r\n    const [isDarkMode, toggleTheme] = useToggle(false);\r\n\r\n        return(\r\n            <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\r\n                {props.children}\r\n            </ThemeContext.Provider>\r\n        )\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport default function useToggle(initialVal = false) {\r\n    const [state, setstate] = useState(initialVal);\r\n    const toggle = () => {\r\n        setstate(!state);\r\n    };\r\n    return [state, toggle];\r\n}","import React, { createContext, useState } from 'react';\r\n\r\nexport const LanguageContext = createContext();\r\n\r\nexport function LanguageProvider(props) {\r\n    const [language, setLanguage] = useState(\"english\");\r\n\r\n    const changeLanguage = (e) => (\r\n        setLanguage(e.target.value)\r\n    )\r\n        return (\r\n            <LanguageContext.Provider value={{ language, changeLanguage }}>\r\n                {props.children}\r\n            </LanguageContext.Provider>\r\n        )\r\n}\r\n\r\n// // create a higher order component\r\n// export const withLanguageContext = Component => props => (\r\n//     <LanguageContext.Consumer>\r\n//         {value => <Component languageContext={value} {...props} />}\r\n//     </LanguageContext.Consumer>\r\n// );","import React, { useContext } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles/NavBarStyles\";\nimport { ThemeContext } from './contexts/ThemeContext';\nimport { LanguageContext } from './contexts/LanguageContext';\n\nconst content = {\n  english: {\n    search: \"Search...\",\n    flag: \"🏳‍🌈\",\n    darkMode: \"Dark Mode\"\n  },\n  chinese: {\n    search: \"搜索...\",\n    flag: \"🚩\",\n    darkMode: \"黑暗模式\"\n  }\n};\n\nfunction Navbar(props) {\n    const { classes } = props;\n    const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n    const { language } = useContext(LanguageContext);\n    const { search, flag, darkMode } = content[language];\n    return (\n      <div className={classes.root}>\n        <AppBar position='static' color={isDarkMode ? 'default' : 'primary'}>\n          <Toolbar>\n            <IconButton className={classes.menuButton} color='inherit'>\n              <span role='img' aria-label='flag'>{flag}</span>\n            </IconButton>\n            <Typography className={classes.title} variant='h6' color='inherit'>\n              {darkMode}\n            </Typography>\n            <Switch onChange={toggleTheme} />\n            <div className={classes.grow} />\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder={search}\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput\n                }}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n}\nexport default withStyles(styles)(Navbar);\n","const styles = theme => ({\r\n    main: {\r\n        width: \"auto\",\r\n        display: \"block\",\r\n        marginLeft: theme.spacing.unit * 3,\r\n        marginRight: theme.spacing.unit * 3,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\"\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 8,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing.unit,\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing.unit * 3\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing.unit * 3\r\n    }\r\n})\r\n\r\nexport default styles;","import React, { useContext } from 'react';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport styles from \"./styles/FormStyles\";\r\nimport { LanguageContext } from \"./contexts/LanguageContext\";\r\n\r\nconst words = {\r\n    english: {\r\n        signIn: \"Sign In\",\r\n        email: \"Email\",\r\n        password: \"Password\",\r\n        remember: \"Remember Me\"\r\n    },\r\n    chinese: {\r\n        signIn: \"登录\",\r\n        email: \"邮箱\",\r\n        password: \"密码\",\r\n        remember: \"记住账号密码\"\r\n    }\r\n}\r\n\r\nfunction Form(props) {\r\n    const { classes } = props;\r\n    const { language, changeLanguage } = useContext(LanguageContext);\r\n    const { email, signIn, password, remember } = words[language];\r\n    return (\r\n        <div className={classes.main}>\r\n            <Paper className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Select value={language} onChange={changeLanguage}>\r\n                    <MenuItem value=\"english\">English</MenuItem>\r\n                    <MenuItem value=\"chinese\">中文</MenuItem>\r\n                </Select>\r\n                <form className={classes.form}>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"email\">{email}</InputLabel>\r\n                        <Input id=\"email\" name=\"email\" autoFocus />\r\n                    </FormControl>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"password\">{password}</InputLabel>\r\n                        <Input id=\"password\" name=\"password\" autoFocus />\r\n                    </FormControl>\r\n                    <FormControlLabel \r\n                        control={<Checkbox color=\"primary\" />} \r\n                        label={remember}\r\n                    />\r\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" fullWidth className={classes.submit}>\r\n                        {signIn}\r\n                    </Button>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Form);","import React, { Component } from \"react\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\n\nexport default class PageContent extends Component {\n  static contextType = ThemeContext;\n  render() {\n    const { isDarkMode } = this.context;\n    const styles = {\n      backgroundColor: isDarkMode? \"black\" :\"white\",\n      height: \"100vh\",\n      width: \"100vw\"\n    };\n    return <div style={styles}>{this.props.children}</div> \n  }\n}\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Form from \"./Form\";\nimport PageContent from './PageContent';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport { LanguageProvider } from './contexts/LanguageContext';\n\nfunction App() {\n    return (\n      <ThemeProvider>\n        <LanguageProvider>\n          <PageContent>\n              <Navbar />\n              <Form />\n          </PageContent>\n        </LanguageProvider>         \n      </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}